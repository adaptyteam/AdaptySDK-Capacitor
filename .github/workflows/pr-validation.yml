name: PR Validation

on:
  pull_request:
    branches: [ main, dev ]
    types: [opened, synchronize, reopened]

jobs:
  validate-pr:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'yarn'
        cache-dependency-path: 'pure-rn/yarn.lock'

    - name: Install dependencies
      working-directory: ./pure-rn
      run: |
        yarn install --frozen-lockfile
        git reset --hard HEAD

    - name: Run TypeScript check
      working-directory: ./pure-rn
      run: npx tsc --noEmit


  auto-assign-reviewers:
    runs-on: ubuntu-latest
    if: github.event.action == 'opened'

    steps:
    - name: Auto-assign reviewers based on CODEOWNERS
      uses: actions/github-script@v7
      with:
        script: |
          try {
            const { data: codeowners } = await github.rest.repos.getContent({
              owner: context.repo.owner,
              repo: context.repo.repo,
              path: '.github/CODEOWNERS'
            });
            
            // Parse CODEOWNERS and extract usernames
            const content = Buffer.from(codeowners.content, 'base64').toString();
            const usernames = content.match(/@[\w-]+/g)?.map(u => u.substring(1)) || [];
            
            if (usernames.length > 0) {
              await github.rest.pulls.requestReviewers({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: context.issue.number,
                reviewers: usernames.slice(0, 3) // Assign max 3 reviewers
              });
              console.log(`Assigned reviewers: ${usernames.slice(0, 3).join(', ')}`);
            } else {
              console.log('No reviewers found in CODEOWNERS');
            }
          } catch (error) {
            console.error('Failed to assign reviewers:', error.message);
            // Don't fail the job if reviewer assignment fails
          }
